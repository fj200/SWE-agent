{"model_name_or_path": "250526_anthropic_filemap_simple_review_sbl__claude-sonnet-4-20250514__t-0.00__p-1.00__c-5.00___swe_bench_lite_test", "instance_id": "mwaskom__seaborn-3407", "model_patch": "diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py\nindex 75349099..2bc29e08 100644\n--- a/seaborn/axisgrid.py\n+++ b/seaborn/axisgrid.py\n@@ -1304,7 +1304,28 @@ class PairGrid(Grid):\n         self._add_axis_labels()\n \n         # Sort out the hue variable\n-        self._hue_var = hue\n+        # For MultiIndex columns, we need to store the actual column name\n+        # that pandas resolves to, not just the string that was passed in\n+        if hue is not None:\n+            # Get the actual column name by finding it in the columns\n+            # This handles the case where 'hue' becomes ('hue', '') in MultiIndex\n+            if hasattr(data.columns, 'get_loc'):\n+                try:\n+                    # This will work for both regular and MultiIndex columns\n+                    loc = data.columns.get_loc(hue)\n+                    if isinstance(loc, slice):\n+                        # For MultiIndex, get_loc might return a slice\n+                        actual_hue_col = data.columns[loc][0]\n+                    else:\n+                        actual_hue_col = data.columns[loc]\n+                    self._hue_var = actual_hue_col\n+                except (KeyError, IndexError):\n+                    # Fallback to original behavior\n+                    self._hue_var = hue\n+            else:\n+                self._hue_var = hue\n+        else:\n+            self._hue_var = hue\n         if hue is None:\n             self.hue_names = hue_order = [\"_nolegend_\"]\n             self.hue_vals = pd.Series([\"_nolegend_\"] * len(data),\n@@ -1472,8 +1493,8 @@ class PairGrid(Grid):\n                 for ax in diag_axes[1:]:\n                     share_axis(diag_axes[0], ax, \"y\")\n \n-            self.diag_vars = np.array(diag_vars, np.object_)\n-            self.diag_axes = np.array(diag_axes, np.object_)\n+            self.diag_vars = diag_vars\n+            self.diag_axes = diag_axes\n \n         if \"hue\" not in signature(func).parameters:\n             return self._map_diag_iter_hue(func, **kwargs)\n"}