{"model_name_or_path": "250526_anthropic_filemap_simple_review_sbl__claude-sonnet-4-20250514__t-0.00__p-1.00__c-5.00___swe_bench_lite_test", "instance_id": "scikit-learn__scikit-learn-11040", "model_patch": "diff --git a/sklearn/neighbors/base.py b/sklearn/neighbors/base.py\nindex 3e5e729c2..5accabea6 100644\n--- a/sklearn/neighbors/base.py\n+++ b/sklearn/neighbors/base.py\n@@ -7,6 +7,7 @@\n #\n # License: BSD 3 clause (C) INRIA, University of Amsterdam\n import warnings\n+import numbers\n from abc import ABCMeta, abstractmethod\n \n import numpy as np\n@@ -99,6 +100,17 @@ def _get_weights(dist, weights):\n                          \"'distance', or a callable function\")\n \n \n+def _check_n_neighbors(n_neighbors):\n+    \"\"\"Check to make sure n_neighbors is a valid integer\"\"\"\n+    if n_neighbors is None:\n+        raise ValueError(\"n_neighbors must be specified (got None)\")\n+    if not isinstance(n_neighbors, (numbers.Integral, np.integer)):\n+        raise TypeError(\"n_neighbors must be an integer, got %s\" % type(n_neighbors))\n+    if n_neighbors <= 0:\n+        raise ValueError(\"Expected n_neighbors > 0. Got %d\" % n_neighbors)\n+    return n_neighbors\n+\n+\n class NeighborsBase(six.with_metaclass(ABCMeta, BaseEstimator)):\n     \"\"\"Base class for nearest neighbors estimators.\"\"\"\n \n@@ -252,13 +264,6 @@ class NeighborsBase(six.with_metaclass(ABCMeta, BaseEstimator)):\n             raise ValueError(\"algorithm = '%s' not recognized\"\n                              % self.algorithm)\n \n-        if self.n_neighbors is not None:\n-            if self.n_neighbors <= 0:\n-                raise ValueError(\n-                    \"Expected n_neighbors > 0. Got %d\" %\n-                    self.n_neighbors\n-                )\n-\n         return self\n \n     @property\n@@ -327,6 +332,8 @@ class KNeighborsMixin(object):\n \n         if n_neighbors is None:\n             n_neighbors = self.n_neighbors\n+        \n+        n_neighbors = _check_n_neighbors(n_neighbors)\n \n         if X is not None:\n             query_is_train = False\n@@ -466,6 +473,8 @@ class KNeighborsMixin(object):\n         \"\"\"\n         if n_neighbors is None:\n             n_neighbors = self.n_neighbors\n+        \n+        n_neighbors = _check_n_neighbors(n_neighbors)\n \n         # kneighbors does the None handling.\n         if X is not None:\n"}